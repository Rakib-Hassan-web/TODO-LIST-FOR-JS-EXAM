body {
  background: gray;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

.main {
  width: 550px;
  /* backdrop-filter: blur(2px); */
  border: 2px solid greenyellow;
  border-radius: 20px;
  padding: 40px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.box {
  width: 100px;
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 2px solid rgb(255, 0, 0);
  border-radius: 50%;

}

.pluss {
  font-size: 30px;
}

.limit {
  font-size: 30px;
}

.errorr {
  color: yellow;
}

.input1 {
  padding: 20px;
  border: none;
  outline: none;
  background: rgba(81, 243, 162, 0.871);
  font-size: 20px;
  color: #000;
  border-radius: 10px;
}


.inpBTN {
  display: flex;
  /* justify-content: center; */
  align-items: center;
  gap: 40px;
  margin-bottom: 40px;

}


.extraTODO {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.extrainput {
  padding: 20px;
  border: none;
  outline: none;
  background: rgba(81, 243, 162, 0.871);
  font-size: 20px;
  color: #000;
  border-radius: 10px;
  margin-top: 25px;
}

.deletbutton {
  background: transparent;
  border: none;
  font-size: 40px;
  margin-top: 25px;
  cursor: pointer;
  transition: all linear .4s;
}

.deletbutton:hover{
  transform: scale(1.3);
  color: red;
}

.editbutton {
  background: transparent;
  border: none;
  font-size: 40px;
  margin-top: 25px;
  cursor: pointer;
  transition: all linear .4s;


}
.editbutton:hover{
  transform: scale(1.3);
  color: rgb(0, 255, 51);
}

.donebutton {
  background: transparent;
  border: none;
  font-size: 40px;
  margin-top: 25px;
  transition: all linear .4s;
  cursor: pointer;

}

.donebutton:hover{
  transform: scale(1.3);
  color: rgb(255, 222, 7);
}


.extra {
  background: transparent;
  border: none;
  font-size: 40px;
  margin-top: 25px;
  transition: all linear .4s;
  cursor: pointer;

}













/* -------------ui varse button--------- */

.btn-31,
.btn-31 *,
.btn-31 :after,
.btn-31 :before,
.btn-31:after,
.btn-31:before {
  border: 0 solid;
  box-sizing: border-box;
}

.btn-31 {
  -webkit-tap-highlight-color: transparent;
  -webkit-appearance: button;
  background-color: #000;
  background-image: none;
  color: #fff;
  cursor: pointer;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif,
    Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  font-size: 100%;
  font-weight: 900;
  line-height: 1.5;
  margin: 0;
  -webkit-mask-image: -webkit-radial-gradient(#000, #fff);
  padding: 5px;
}

.btn-31:disabled {
  cursor: default;
}

.btn-31:-moz-focusring {
  outline: auto;
}

.btn-31 svg {
  display: block;
  vertical-align: middle;
}

.btn-31 [hidden] {
  display: none;
}

.btn-31 {
  border-width: 1px;
  padding: 18px 2rem;
  position: relative;
  text-transform: uppercase;
}

.btn-31:before {
  --progress: 100%;
  background: #fff;
  -webkit-clip-path: polygon(100% 0,
      var(--progress) var(--progress),
      0 100%,
      100% 100%);
  clip-path: polygon(100% 0,
      var(--progress) var(--progress),
      0 100%,
      100% 100%);
  content: "";
  inset: 0;
  position: absolute;
  transition: -webkit-clip-path 0.2s ease;
  transition: clip-path 0.2s ease;
  transition: clip-path 0.2s ease, -webkit-clip-path 0.2s ease;
}

.btn-31:hover:before {
  --progress: 0%;
}

.btn-31 .text-container {
  display: block;
  overflow: hidden;
  position: relative;
}

.btn-31 .text {
  display: block;
  font-weight: 900;
  mix-blend-mode: difference;
  position: relative;
}

.btn-31:hover .text {
  -webkit-animation: move-up-alternate 0.3s ease forwards;
  animation: move-up-alternate 0.3s ease forwards;
}

@-webkit-keyframes move-up-alternate {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(80%);
  }

  51% {
    transform: translateY(-80%);
  }

  to {
    transform: translateY(0);
  }
}

@keyframes move-up-alternate {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(80%);
  }

  51% {
    transform: translateY(-80%);
  }

  to {
    transform: translateY(0);
  }
}